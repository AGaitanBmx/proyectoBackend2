<style>
  /* Estilos generales */
  .products-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
  }
  
  .products-title {
    text-align: center;
    color: #333;
    margin-bottom: 2rem;
    font-size: 2.2rem;
    font-weight: 600;
  }
  
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
    padding: 1rem;
  }
  
  /* Tarjeta de producto */
  .product-card {
    background: white;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }
  
  .product-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-bottom: 1px solid #eee;
  }
  
  .product-info {
    padding: 1.5rem;
  }
  
  .product-title {
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
    color: #333;
  }
  
  .product-price {
    font-size: 1.1rem;
    font-weight: 600;
    color: #4a90e2;
    margin-bottom: 0.5rem;
  }
  
  .product-stock {
    color: #666;
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }
  
  .add-to-cart {
    width: 100%;
    padding: 0.8rem;
    background-color: #4a90e2;
    color: white;
    border: none;
    border-radius: 5px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .add-to-cart:hover {
    background-color: #3a7bc8;
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .products-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    }
  }
  
  @media (max-width: 480px) {
    .products-grid {
      grid-template-columns: 1fr;
    }
    
    .products-title {
      font-size: 1.8rem;
    }
  }
</style>

<div class="products-container">
  <h2 class="products-title">Lista de Productos</h2>
  
  <div class="products-grid">
    {{#each products}}
      <div class="product-card">
        <img src="{{this.thumbnail}}" alt="{{this.title}}" class="product-image" onerror="this.src='https://via.placeholder.com/300x200?text=Imagen+no+disponible'">
        <div class="product-info">
          <h3 class="product-title">{{this.title}}</h3>
          <p class="product-price">${{this.price}}</p>
          <p class="product-stock">{{this.stock}} unidades disponibles</p>
<button 
  class="add-to-cart" 
  onclick="addToCart('{{this._id}}')"
  data-product-id="{{this._id}}"
>
  Agregar al carrito
</button>
        </div>
      </div>
    {{/each}}
  </div>
</div>

<script>
   const cartId = "{{cartId}}";  // Esto asumo que lo pasás desde el renderProducts (si no, avísame y lo ajustamos)

async function addToCart(productId) {
  try {
    // Verifica si hay un cartId válido
    if (!"{{cartId}}") {
      throw new Error("No se pudo identificar tu carrito. Recarga la página.");
    }

    const response = await fetch(`/api/carts/${"{{cartId}}"}/products/${productId}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        // Añade el token de autenticación si es necesario
        'Authorization': `Bearer ${localStorage.getItem('token') || ''}`
      },
      body: JSON.stringify({ quantity: 1 })
    });

    const data = await response.json();
    
    if (!response.ok) {
      throw new Error(data.message || 'Error al agregar producto');
    }

    // Notificación de éxito más detallada
    Swal.fire({
      position: 'top-end',
      icon: 'success',
      title: '¡Agregado al carrito!',
      showConfirmButton: false,
      timer: 1500,
      toast: true,
      background: '#4a90e2',
      color: 'white'
    });
    
  } catch (error) {
    console.error("Error:", error);
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: error.message || 'Error al agregar al carrito',
      confirmButtonColor: '#e74c3c'
    });
  }
}
</script>